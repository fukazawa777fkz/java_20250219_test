package com.example.studyapp.entity_gen;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TaskInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:10:59 JST 2025
     */
    public TaskInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTask_idIsNull() {
            addCriterion("task_id is null");
            return (Criteria) this;
        }

        public Criteria andTask_idIsNotNull() {
            addCriterion("task_id is not null");
            return (Criteria) this;
        }

        public Criteria andTask_idEqualTo(Integer value) {
            addCriterion("task_id =", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idNotEqualTo(Integer value) {
            addCriterion("task_id <>", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idGreaterThan(Integer value) {
            addCriterion("task_id >", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_id >=", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idLessThan(Integer value) {
            addCriterion("task_id <", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idLessThanOrEqualTo(Integer value) {
            addCriterion("task_id <=", value, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idIn(List<Integer> values) {
            addCriterion("task_id in", values, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idNotIn(List<Integer> values) {
            addCriterion("task_id not in", values, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idBetween(Integer value1, Integer value2) {
            addCriterion("task_id between", value1, value2, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_idNotBetween(Integer value1, Integer value2) {
            addCriterion("task_id not between", value1, value2, "task_id");
            return (Criteria) this;
        }

        public Criteria andTask_titleIsNull() {
            addCriterion("task_title is null");
            return (Criteria) this;
        }

        public Criteria andTask_titleIsNotNull() {
            addCriterion("task_title is not null");
            return (Criteria) this;
        }

        public Criteria andTask_titleEqualTo(String value) {
            addCriterion("task_title =", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleNotEqualTo(String value) {
            addCriterion("task_title <>", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleGreaterThan(String value) {
            addCriterion("task_title >", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleGreaterThanOrEqualTo(String value) {
            addCriterion("task_title >=", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleLessThan(String value) {
            addCriterion("task_title <", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleLessThanOrEqualTo(String value) {
            addCriterion("task_title <=", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleLike(String value) {
            addCriterion("task_title like", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleNotLike(String value) {
            addCriterion("task_title not like", value, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleIn(List<String> values) {
            addCriterion("task_title in", values, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleNotIn(List<String> values) {
            addCriterion("task_title not in", values, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleBetween(String value1, String value2) {
            addCriterion("task_title between", value1, value2, "task_title");
            return (Criteria) this;
        }

        public Criteria andTask_titleNotBetween(String value1, String value2) {
            addCriterion("task_title not between", value1, value2, "task_title");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUser_idIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUser_idEqualTo(Integer value) {
            addCriterion("user_id =", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThan(Integer value) {
            addCriterion("user_id >", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThan(Integer value) {
            addCriterion("user_id <", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idIn(List<Integer> values) {
            addCriterion("user_id in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "user_id");
            return (Criteria) this;
        }

        public Criteria andUser_idNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "user_id");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineIsNull() {
            addCriterion("task_deadline is null");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineIsNotNull() {
            addCriterion("task_deadline is not null");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineEqualTo(Date value) {
            addCriterionForJDBCDate("task_deadline =", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineNotEqualTo(Date value) {
            addCriterionForJDBCDate("task_deadline <>", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineGreaterThan(Date value) {
            addCriterionForJDBCDate("task_deadline >", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("task_deadline >=", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineLessThan(Date value) {
            addCriterionForJDBCDate("task_deadline <", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("task_deadline <=", value, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineIn(List<Date> values) {
            addCriterionForJDBCDate("task_deadline in", values, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineNotIn(List<Date> values) {
            addCriterionForJDBCDate("task_deadline not in", values, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("task_deadline between", value1, value2, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_deadlineNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("task_deadline not between", value1, value2, "task_deadline");
            return (Criteria) this;
        }

        public Criteria andTask_statusIsNull() {
            addCriterion("task_status is null");
            return (Criteria) this;
        }

        public Criteria andTask_statusIsNotNull() {
            addCriterion("task_status is not null");
            return (Criteria) this;
        }

        public Criteria andTask_statusEqualTo(String value) {
            addCriterion("task_status =", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusNotEqualTo(String value) {
            addCriterion("task_status <>", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusGreaterThan(String value) {
            addCriterion("task_status >", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusGreaterThanOrEqualTo(String value) {
            addCriterion("task_status >=", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusLessThan(String value) {
            addCriterion("task_status <", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusLessThanOrEqualTo(String value) {
            addCriterion("task_status <=", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusLike(String value) {
            addCriterion("task_status like", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusNotLike(String value) {
            addCriterion("task_status not like", value, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusIn(List<String> values) {
            addCriterion("task_status in", values, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusNotIn(List<String> values) {
            addCriterion("task_status not in", values, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusBetween(String value1, String value2) {
            addCriterion("task_status between", value1, value2, "task_status");
            return (Criteria) this;
        }

        public Criteria andTask_statusNotBetween(String value1, String value2) {
            addCriterion("task_status not between", value1, value2, "task_status");
            return (Criteria) this;
        }

        public Criteria andCreated_atIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreated_atIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreated_atEqualTo(Date value) {
            addCriterion("created_at =", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atGreaterThan(Date value) {
            addCriterion("created_at >", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atLessThan(Date value) {
            addCriterion("created_at <", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atIn(List<Date> values) {
            addCriterion("created_at in", values, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "created_at");
            return (Criteria) this;
        }

        public Criteria andCreated_atNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "created_at");
            return (Criteria) this;
        }

        public Criteria andDelete_flgIsNull() {
            addCriterion("delete_flg is null");
            return (Criteria) this;
        }

        public Criteria andDelete_flgIsNotNull() {
            addCriterion("delete_flg is not null");
            return (Criteria) this;
        }

        public Criteria andDelete_flgEqualTo(Integer value) {
            addCriterion("delete_flg =", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgNotEqualTo(Integer value) {
            addCriterion("delete_flg <>", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgGreaterThan(Integer value) {
            addCriterion("delete_flg >", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgGreaterThanOrEqualTo(Integer value) {
            addCriterion("delete_flg >=", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgLessThan(Integer value) {
            addCriterion("delete_flg <", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgLessThanOrEqualTo(Integer value) {
            addCriterion("delete_flg <=", value, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgIn(List<Integer> values) {
            addCriterion("delete_flg in", values, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgNotIn(List<Integer> values) {
            addCriterion("delete_flg not in", values, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgBetween(Integer value1, Integer value2) {
            addCriterion("delete_flg between", value1, value2, "delete_flg");
            return (Criteria) this;
        }

        public Criteria andDelete_flgNotBetween(Integer value1, Integer value2) {
            addCriterion("delete_flg not between", value1, value2, "delete_flg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_info
     *
     * @mbg.generated do_not_delete_during_merge Sun Feb 16 18:11:00 JST 2025
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table task_info
     *
     * @mbg.generated Sun Feb 16 18:11:00 JST 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}